#ifndef ESTSEAM_H
#define ESTSEAM_H

#include <opencv2/opencv.hpp>
#include <iostream>
#include <fstream>
#include <string>
#include "opencv2/opencv_modules.hpp"
#include <opencv2/core/utility.hpp>
#include "opencv2/imgcodecs.hpp"
#include "opencv2/highgui.hpp"
#include "opencv2/stitching/detail/autocalib.hpp"
#include "opencv2/stitching/detail/blenders.hpp"
#include "opencv2/stitching/detail/timelapsers.hpp"
#include "opencv2/stitching/detail/camera.hpp"
#include "opencv2/stitching/detail/exposure_compensate.hpp"
#include "opencv2/stitching/detail/matchers.hpp"
#include "opencv2/stitching/detail/motion_estimators.hpp"
#include "opencv2/stitching/detail/seam_finders.hpp"
#include "opencv2/stitching/detail/warpers.hpp"
#include "opencv2/stitching/warpers.hpp"
#include <filesystem>

#include <condition_variable>

using namespace std;
using namespace cv;
using namespace cv::detail;

class Est_seamm {
public:
	// 辅助变量
	mutex mtx_esS;
	condition_variable cond;
	bool bootflag_seam = false; //拼接缝boot标识
	bool maskflag_seam = false; //拼接缝是否可读取标识
	vector<UMat>find_mask{UMat(),UMat()};
	int id = 0; //计数变量

	// 输入
	vector<UMat>myimg{ UMat(),UMat() }; //读取warped_float图像
	vector<UMat>mymask{ UMat(),UMat() }; //读取warp后掩码 ---> find后存储拼接掩码
	vector<Point>corner; //读取角点

   // 函数
	void update_img(vector<UMat>images_warped_f_in, vector<Point>corners_in, vector<UMat>masks_warped_in); //读取信息
	void init_seamfinder(); //初始化搜索器并搜索拼接缝
	void save_mask(); //保存掩码
};

#endif // !ESTSEAM_H
